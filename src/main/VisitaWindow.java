/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package main;
import conexao.Conexao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Edu
 */
public class VisitaWindow extends javax.swing.JFrame {

    /**
     * Creates new form VisitaWindow
     */
    public VisitaWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Visitas = new javax.swing.JDialog();
        label5 = new java.awt.Label();
        label7 = new java.awt.Label();
        Enviar = new javax.swing.JButton();
        Editando = new javax.swing.JCheckBox();
        Data = new javax.swing.JFormattedTextField();
        label11 = new java.awt.Label();
        ImovelBox = new javax.swing.JComboBox<>();
        ClienteBox = new javax.swing.JComboBox<>();
        label12 = new java.awt.Label();
        label8 = new java.awt.Label();
        Hora = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        Editar = new javax.swing.JButton();
        Novo = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        label3 = new java.awt.Label();

        Visitas.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Visitas.setTitle("Registrar visita");
        Visitas.setFocusTraversalPolicyProvider(true);
        Visitas.setLocationByPlatform(true);
        Visitas.setModal(true);
        Visitas.setResizable(false);
        Visitas.setSize(new java.awt.Dimension(388, 427));
        Visitas.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                VisitasWindowOpened(evt);
            }
        });

        label5.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        label5.setText("Registrar nova visita");

        label7.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label7.setText("Data:");

        Enviar.setText("Enviar");
        Enviar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EnviarMouseClicked(evt);
            }
        });
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });

        Editando.setText("Editando");
        Editando.setEnabled(false);

        try {
            Data.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        label11.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label11.setText("Im√≥vel:");

        ImovelBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teste1", "Teste2" }));
        ImovelBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImovelBoxActionPerformed(evt);
            }
        });

        ClienteBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Teste1", "Teste2" }));
        ClienteBox.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                ClienteBoxComponentAdded(evt);
            }
        });
        ClienteBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClienteBoxActionPerformed(evt);
            }
        });

        label12.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label12.setText("Cliente:");

        label8.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label8.setText("Hora:");

        try {
            Hora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        Hora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HoraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VisitasLayout = new javax.swing.GroupLayout(Visitas.getContentPane());
        Visitas.getContentPane().setLayout(VisitasLayout);
        VisitasLayout.setHorizontalGroup(
            VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VisitasLayout.createSequentialGroup()
                .addGroup(VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(VisitasLayout.createSequentialGroup()
                        .addContainerGap(102, Short.MAX_VALUE)
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 82, Short.MAX_VALUE))
                    .addGroup(VisitasLayout.createSequentialGroup()
                        .addContainerGap(249, Short.MAX_VALUE)
                        .addComponent(Enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(VisitasLayout.createSequentialGroup()
                        .addGap(178, 178, 178)
                        .addComponent(Editando, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(VisitasLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Data)
                            .addComponent(Hora, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ClienteBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ImovelBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        VisitasLayout.setVerticalGroup(
            VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(VisitasLayout.createSequentialGroup()
                .addComponent(Editando, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Data, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Hora, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ImovelBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(VisitasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ClienteBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cliente", "Data", "Hora", "Proprietario", "Im√≥vel"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(50);
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.setUpdateSelectionOnSort(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        Editar.setEnabled(false);
        Editar.setLabel("Mudar visita");
        Editar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditarMouseClicked(evt);
            }
        });
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });

        Novo.setText("Registrar Visita");
        Novo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NovoMouseClicked(evt);
            }
        });
        Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");
        Excluir.setEnabled(false);
        Excluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExcluirMouseClicked(evt);
            }
        });

        label3.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        label3.setText("Visitas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Excluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Editar))
                            .addComponent(Novo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1056, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Novo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Editar)
                            .addComponent(Excluir))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        int id = Integer.parseInt(jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());

        try {
            String sql = "SELECT data, hora FROM Visita WHERE id_visita="+id;
            Connection conn = Conexao.getConexao();

            Statement st = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
            ResultSet res = st.executeQuery(sql);

            Editar.setEnabled(true);
            Excluir.setEnabled(true);
            
            String formattedDate = null;

            while (res.next()) {
                String data = res.getString("data");
                
                try {
                    // Parse the input date string to a Date object
                    SimpleDateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd");
                    SimpleDateFormat outputFormat = new SimpleDateFormat("dd/MM/yyyy");

                    Date date = inputFormat.parse(data);

                    // Format the Date object to the desired output format
                    formattedDate = outputFormat.format(date);
                    System.out.println("Formatted date: " + formattedDate);
                } catch (ParseException e) {
                    System.out.println("Invalid date format");
                    e.printStackTrace();
                }
                Data.setText(formattedDate);
                Hora.setText(res.getString("hora"));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void EditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditarMouseClicked
        // TODO add your handling code here:
        VisitasWindowOpened(null);
        Editando.setSelected(true);
        Visitas.setVisible(true);
    }//GEN-LAST:event_EditarMouseClicked

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EditarActionPerformed

    private void NovoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NovoMouseClicked
        // TODO add your handling code here:
        Data.setText("");
        Hora.setText("");
        ImovelBox.setSelectedIndex(0);
        ClienteBox.setSelectedIndex(0);
        Editando.setSelected(false);
        Visitas.setVisible(true);
    }//GEN-LAST:event_NovoMouseClicked

    private void NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoActionPerformed

    }//GEN-LAST:event_NovoActionPerformed

    private void ExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExcluirMouseClicked
        // TODO add your handling code here:
        PreparedStatement ps = null;

        try {
            String sql = "DELETE FROM Visita WHERE id_visita = ?";

            ps = Conexao.getConexao().prepareStatement(sql);

            ps.setString(1, jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());

            int r = JOptionPane.showConfirmDialog(this, "Voc√™ tem certeza que quer excluir essa transa√ß√£o?");

            if (r != 0) {
                return;
            }

            if (!ps.execute()) {
                formWindowOpened(null);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ExcluirMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        try {
            String sql = "SELECT Visita.id_visita, Cliente.nome_cliente, Visita.data, Visita.hora, Proprietario.nome_proprietario, Imovel.endereco_imovel FROM Visita JOIN Cliente ON Visita.id_cliente = Cliente.id_cliente JOIN Imovel ON Visita.id_imovel = Imovel.id_imovel JOIN Proprietario ON Visita.id_proprietario = Proprietario.id_proprietario";
            
            Connection conn = Conexao.getConexao();
            
            Statement st = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
            ResultSet res = st.executeQuery(sql);
            refreshTableBasedOnResults(res);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowOpened

    private void EnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EnviarMouseClicked
        // TODO add your handling code here:
        PreparedStatement ps = null;
        String sql = "";
        boolean is_editing = Editando.isSelected();

        try {
            String data = Data.getText();
            String hora = Hora.getText();
            VisitaItem itemFromImovelBox = (VisitaItem) ImovelBox.getSelectedItem();
            VisitaItem itemFromClienteBox = (VisitaItem) ClienteBox.getSelectedItem();
            
            String imovel_box = Integer.toString(itemFromImovelBox.getId());
            String cliente_box = Integer.toString(itemFromClienteBox.getId());
            String proprietario_box = Integer.toString(itemFromImovelBox.getProprietarioId());
            
            SimpleDateFormat inputFormat = new SimpleDateFormat("dd/MM/yyyy");
            SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");
            
            String formattedDate = null;
            
            try {
            // Parse the input date string to a Date object
                Date date = inputFormat.parse(data);

                // Format the Date object to the desired output format
                formattedDate = outputFormat.format(date);
                System.out.println("Formatted date: " + formattedDate);
            } catch (ParseException e) {
                System.out.println("Invalid date format");
                e.printStackTrace();
            }

            if (!is_editing) {
                sql = "INSERT INTO Visita (data, hora, id_imovel, id_cliente, id_proprietario) VALUES (?, ?, ?, ?, ?)";
            } else {
                sql = "UPDATE Visita SET data = ?, hora = ?, id_imovel = ?, id_cliente = ?, id_proprietario = ? WHERE id_visita = ?";
            }

            ps = Conexao.getConexao().prepareStatement(sql);
            
            ps.setString(1, formattedDate);
            ps.setString(2, hora);

            ps.setString(3, imovel_box);
            ps.setString(4, cliente_box);
            ps.setString(5, proprietario_box);

            if (is_editing) {
                ps.setString(6, jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString());
            }

            boolean b = ps.execute();
            if (!b) {
                if (is_editing) {
                    JOptionPane.showMessageDialog(this, "Visita editada com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Visita criada com sucesso!");
                }
                formWindowOpened(null);
            } else {
                JOptionPane.showMessageDialog(this, "Erro! Tente novamente mais tarde...");
            }
            Visitas.setVisible(false);
            ps.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_EnviarMouseClicked

    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed

    }//GEN-LAST:event_EnviarActionPerformed

    private void ImovelBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImovelBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ImovelBoxActionPerformed

    private void ClienteBoxComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_ClienteBoxComponentAdded
        // TODO add your handling code here:

    }//GEN-LAST:event_ClienteBoxComponentAdded

    private void ClienteBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClienteBoxActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_ClienteBoxActionPerformed

    class VisitaItem {
        int id;
        int proprietario_id;
        String name;
        public VisitaItem(int id, String name, int proprietario_id) {
            this.id = id;
            this.name = name;
            this.proprietario_id = proprietario_id;
        }
        public int getProprietarioId() {
            return proprietario_id;
        }
        public int getId() {
            return id;
        }
        @Override
        public String toString() {
            return name;
        }
    }
    
    private void VisitasWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_VisitasWindowOpened
        // TODO add your handling code here:
        try {
            String sql = "SELECT id_imovel, endereco_imovel, id_proprietario FROM Imovel";

            Statement st = Conexao.getConexao().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
            ResultSet res = st.executeQuery(sql);
            Vector vector = new Vector();
            int i = 0;
            int selected_i = 0;
            while (res.next()) {
                vector.addElement(
                    new VisitaItem(
                        res.getInt("id_imovel"),
                        res.getString("endereco_imovel"),
                        res.getInt("id_proprietario")
                    )
                );

                if (Editando.isSelected() && jTable2.getValueAt(jTable2.getSelectedRow(), 5).equals(res.getString("endereco_imovel"))) {
                    selected_i = i;
                }

                i++;
            }

            ImovelBox.setModel(new DefaultComboBoxModel(vector));

            if (Editando.isSelected()) {
                ImovelBox.setSelectedIndex(selected_i);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            String sql = "SELECT id_cliente, nome_cliente FROM Cliente";

            Statement st = Conexao.getConexao().createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_UPDATABLE);
            ResultSet res = st.executeQuery(sql);
            Vector vector = new Vector();
            int i = 0;
            int selected_i = 0;
            while (res.next()) {
                vector.addElement(
                    new VisitaItem(
                        res.getInt("id_cliente"),
                        res.getString("nome_cliente"),
                        0
                    )
                );

                if (Editando.isSelected() && jTable2.getValueAt(jTable2.getSelectedRow(), 1).equals(res.getString("nome_cliente"))) {
                    selected_i = i;
                }

                i++;
            }

            ClienteBox.setModel(new DefaultComboBoxModel(vector));

            if (Editando.isSelected()) {
                ClienteBox.setSelectedIndex(selected_i);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_VisitasWindowOpened

    private void HoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HoraActionPerformed

    private void refreshTableBasedOnResults(ResultSet res) {
        try {
            res.last();
            int row = res.getRow();
            int col = res.getMetaData().getColumnCount();
            res.beforeFirst();
            String rowData[][] = new String[row][col];
            int r = 0;
            while (res.next()) {
                for (int i = 0; i < col; i++) {
                    rowData[r][i] = res.getObject(i + 1).toString();  
                }
                r++;
            }

            String[] columnName = {"ID", "Cliente", "Data", "Hora", "Proprietario", "Im√≥vel"};
            DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
            model.setDataVector(rowData, columnName);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VisitaWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VisitaWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VisitaWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VisitaWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VisitaWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ClienteBox;
    private javax.swing.JFormattedTextField Data;
    private javax.swing.JCheckBox Editando;
    private javax.swing.JButton Editar;
    private javax.swing.JButton Enviar;
    private javax.swing.JButton Excluir;
    private javax.swing.JFormattedTextField Hora;
    private javax.swing.JComboBox<String> ImovelBox;
    private javax.swing.JButton Novo;
    private javax.swing.JDialog Visitas;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label3;
    private java.awt.Label label5;
    private java.awt.Label label7;
    private java.awt.Label label8;
    // End of variables declaration//GEN-END:variables
}
